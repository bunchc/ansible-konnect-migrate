---
- name: Manage Kong Konnect Control Planes
  hosts: localhost
  become: true

  tasks:
    - name: Get list of existing control planes
      uri:
        url: "https://{{ konnect_api_url }}/control_planes"
        method: GET
        headers:
          Authorization: "Bearer {{ konnect_api_token }}"
        timeout: 10
        validate_certs: no # Adjust based on your security requirements
      register: existing_control_planes

    - name: Create control planes that are in the inventory but not on Konnect
      uri:
        url: "{{ konnect_api_url }}/control-planes"
        method: POST
        headers:
          Authorization: "Bearer {{ konnect_api_token }}"
          Content-Type: "application/json"
        body:
          name: "{{ item.name }}"
          description: "{{ item.description | default('') }}"
          auth_type: "{{ item.auth_type | default('pki_client_certs') }}"
        body_format: json
        return_content: yes
      loop: "{{ konnect_control_planes }}"
      when: item.name not in existing_control_planes.json
      register: created_control_planes

    - name: Update inventory with control plane details (if created)
      set_fact:
        inventory_updates: "{{ created_control_planes.json.results | map(attribute='name') | zip(created_control_planes.json.results, true) | list }}"
      when: created_control_planes is defined

    - name: Add created control planes to in-memory inventory
      add_host:
        hostname: "{{ item.name }}"
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        auth_type: "{{ item.auth_type }}"
        control_plane_endpoint: "{{ item.control_plane_endpoint}}"
        telemetry_endpoint: "{{ item.telemetry_endpoint }}"
        controlPlaneID: "{{ item.id }}"
        cluster_type: "{{ item.cluster_type }}"

      loop: "{{ inventory_updates }}"
      when: inventory_updates is defined

    - name: Upload PKI Certificate Chain to Control Planes
      uri:
        url: "{{ konnect_api_url }}/control-planes/{{ item.0.controlPlaneID }}/dp-client-certificates"
        method: POST
        headers:
          Authorization: "Bearer {{ konnect_api_token }}"
          Content-Type: "application/json"
        body:
          cert: "{{ item.1.cert }}"
        body_format: json
        return_content: yes
      loop: "{{ konnect_control_planes.hosts | dict2items | subelements('value.certificates') }}"
      when: item.1 is defined
